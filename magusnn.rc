##
## magusnn.rc
################################################################################################
## How to lookup a players RC file?
## e.g. http://crawl.akrasiac.org/rcfiles/crawl-0.25/magusnn.rc
## How to learn RC file options?
## http://crawl.akrasiac.org/docs/options_guide.txt
## RC resources & references
## http://crawl.berotato.org/crawl/rcfiles/crawl-0.23/Freakazoid.rc
## https://github.com/gammafunk/dcss-rc#1-include-the-rc-or-lua-file-in-your-rc
## https://github.com/HilariousDeathArtist/DCSSConfigFile/blob/master/HilariousDeathArtist.txt
################################################################################################

##
## Utils
################################################################################################
{
function rc_out(symbol, color, msg)
  crawl.mpr(string.format("\n>> %s <%s>%s</%s>", symbol, color, msg, color))
end
function rc_msg(msg)
  rc_out("🤖", "blue", msg)
end
function rc_scs(msg)
  rc_out("✅", "green", msg)
end
function rc_err(msg)
  rc_out("❌", "lightred", msg)
end

-- Standard Colors (ignoring black, not visible)
local colors = {"darkgrey","lightgrey","white","blue","lightblue","green","lightgreen","cyan","lightcyan","red","lightred","magenta","lightmagenta","yellow","brown"}

function colortest()
  for i, color in ipairs(colors) do
    crawl.mpr(string.format("\n>> 🤖 colortest <%s>%s</%s>", color, color, color))
  end
end
}

##
## BEGIN
################################################################################################
: rc_msg("Initializing magusnn.rc...")

##
## Setup
################################################################################################
-- announce_damage
-- TODO improve output styling and formatting
{
local previous_hp = 0
local previous_mp = 0
local previous_form = ""
local was_berserk_last_turn = false

function announce_damage()
  local current_hp, max_hp = you.hp()
  local current_mp, max_mp = you.mp()
  --Things that increase hp/mp temporarily really mess with this
  local current_form = you.transform()
  local you_are_berserk = you.berserk()
  local max_hp_increased = false
  local max_hp_decreased = false

  if (current_form ~= previous_form) then
    if (previous_form:find("dragon") or
        previous_form:find("statue") or
        previous_form:find("tree") or
        previous_form:find("ice")) then
      max_hp_decreased = true
    elseif (current_form:find("dragon") or
        current_form:find("statue") or
        current_form:find("tree") or
        current_form:find("ice")) then
      max_hp_increased = true
    end
  end
  if (was_berserk_last_turn and not you_are_berserk) then
    max_hp_decreased = true
  elseif (you_are_berserk and not was_berserk_last_turn) then
    max_hp_increased = true
  end

  --crawl.mpr(string.format("previous_form is: %s", previous_form))
  --crawl.mpr(string.format("current_form is: %s", current_form))
  --crawl.mpr(string.format("max_hp_increased is: %s", max_hp_increased and "True" or "False"))
  --crawl.mpr(string.format("max_hp_decreased is: %s", max_hp_decreased and "True" or "False"))

  --crawl.mpr(string:format("you_are_berserk is: %s", you_are_berserk and "True" or "False"))
  --crawl.mpr(string:format("was_berserk_last_turn is: %s", was_berserk_last_turn and "True" or "False"))


  --Skips message on initializing game
  if previous_hp > 0 then
    local hp_difference = previous_hp - current_hp
    local mp_difference = previous_mp - current_mp

    if max_hp_increased or max_hp_decreased then
      if max_hp_increased then
        crawl.mpr("<green>You now have " .. current_hp .. "/" .. max_hp .. " hp.</green>")
      else
        crawl.mpr("<yellow>You now have " .. current_hp .. "/" .. max_hp .. " hp.</yellow>")
      end
    else
      --On losing health
      if (current_hp < previous_hp) then
        if current_hp <= (max_hp * 0.30) then
          crawl.mpr("<red>You take " .. hp_difference .. " damage,</red><lightred> and have " .. current_hp .. "/" .. max_hp .. " hp.</lightred>")
        elseif current_hp <= (max_hp * 0.50) then
          crawl.mpr("<red>You take " .. hp_difference .. " damage, and have " .. current_hp .. "/" .. max_hp .. " hp.</red>")
        elseif current_hp <= (max_hp *  0.70) then
          crawl.mpr("<red>You take " .. hp_difference .. " damage,</red><yellow> and have " .. current_hp .. "/" .. max_hp .. " hp.</yellow>")
        elseif current_hp <= (max_hp * 0.90) then
          crawl.mpr("<red>You take " .. hp_difference .. " damage,</red><lightgrey> and have " .. current_hp .. "/" .. max_hp .. " hp.</lightgrey>")
        else
          crawl.mpr("<red>You take " .. hp_difference .. " damage,</red><green> and have " .. current_hp .. "/" .. max_hp .. " hp.</green>")
        end
        if hp_difference > (max_hp * 0.20) then
          crawl.mpr("<lightred>MASSIVE DAMAGE!!</lightred>")
        end
      end

      --On gaining more than 1 health
      if (current_hp > previous_hp) then
        --Removes the negative sign
        local health_inturn = (0 - hp_difference)
        if (health_inturn > 1) and not (current_hp == max_hp) then
          if current_hp <= (max_hp * 0.30) then
            crawl.mpr("<green>You regained " .. health_inturn .. " hp,</green><lightred> and now have " .. current_hp .. "/" .. max_hp .. " hp.</lightred>")
          elseif current_hp <= (max_hp * 0.50) then
            crawl.mpr("<green>You regained " .. health_inturn .. " hp,</green><red> and now have " .. current_hp .. "/" .. max_hp .. " hp.</red>")
          elseif current_hp <= (max_hp *  0.70) then
            crawl.mpr("<green>You regained " .. health_inturn .. " hp,</green><yellow> and now have " .. current_hp .. "/" .. max_hp .. " hp.</yellow>")
          elseif current_hp <= (max_hp * 0.90) then
            crawl.mpr("<green>You regained " .. health_inturn .. " hp,</green><lightgrey> and now have " .. current_hp .. "/" .. max_hp .. " hp.</lightgrey>")
          else
            crawl.mpr("<green>You regained " .. health_inturn .. " hp, and now have " .. current_hp .. "/" .. max_hp .. " hp.</green>")
          end
        end
        if (current_hp == max_hp) then
          crawl.mpr("<green>Health restored: " .. current_hp .. "</green>")
        end
      end

      --On gaining more than 1 magic
      if (current_mp > previous_mp) then
        --Removes the negative sign
        local mp_inturn = (0 - mp_difference)
        if (mp_inturn > 1) and not (current_mp == max_mp) then
          if current_mp < (max_mp * 0.25) then
            crawl.mpr("<lightcyan>You regained " .. mp_inturn .. " mp,</lightcyan><red> and now have " .. current_mp .. "/" .. max_mp .. " mp.</red>")
          elseif current_mp < (max_mp * 0.50) then
            crawl.mpr("<lightcyan>You regained " .. mp_inturn .. " mp,</lightcyan><yellow> and now have " .. current_mp .. "/" .. max_mp .. " mp.</yellow>")
          else
            crawl.mpr("<lightcyan>You regained " .. mp_inturn .. " mp,</lightcyan><green> and now have " .. current_mp .. "/" .. max_mp .. " mp.</green>")
          end
        end
        if (current_mp == max_mp) then
          crawl.mpr("<lightcyan>MP restored: " .. current_mp .. "</lightcyan>")
        end
      end

      --On losing magic
      if current_mp < previous_mp then
        if current_mp <= (max_mp / 5) then
          crawl.mpr("<lightcyan>You now have </lightcyan><red>" .. current_mp .. "/" ..max_mp .." mp.</red>")
        elseif current_mp <= (max_mp / 2) then
          crawl.mpr("<lightcyan>You now have </lightcyan><yellow>" .. current_mp .. "/" ..max_mp .." mp.</yellow>")
        else
          crawl.mpr("<lightcyan>You now have </lightcyan><green>" .. current_mp .. "/" ..max_mp .." mp.</green>")
        end
      end
    end
  end

  --Set previous hp/mp and form at end of turn
  previous_hp = current_hp
  previous_mp = current_mp
  previous_form = current_form
  was_berserk_last_turn = you_are_berserk
end
}
{
-- Open skills menu at start of runs
local need_skills_opened = true
local function start_open_skills()
  if you.turns() == 0 and need_skills_opened then
    need_skills_opened = false
    crawl.sendkeys("m")
  end
end

-- Compare item for same name but higher plus
local function should_pickup_equip(cur, i2)
  -- always pickup god gift equipment
  if i2.god_gift then return true end

  --  no item in the slot? autopickup anything!
  if cur == nil then return true end

  -- items names are the same, pickup higher plus
  if cur.name("qual") == i2.name("qual") then
    if i2.plus ~= nil and cur.plus < i2.plus then
      return true
    end
  end

  if cur.branded or cur.artefact then return end
  if i2.branded then return true end

  return false
end

-- Equipment autopickup (by Medar and various others)
-- Source http://crawl.berotato.org/crawl/rcfiles/crawl-0.23/Freakazoid.rc
local function pickup_equipment(it, name)
  -- DEBUG
  -- rc_msg(string.format("pickup_equipment: %s", name))

  if it.is_useless then return end

  -- always pickup artefacts
  if it.artefact then return true end

  local class = it.class(true)

  if class == "weapon" then
    -- get currently equipped item in slot
    local cur = items.equipped_at("weapon")

    -- when using unarmed combat, we want to skip the should_pickup_equip for weapons
    if cur == nil then
      -- always pickup god gift equipment
      if it.god_gift then return true end

      return false
    end

    if should_pickup_equip(cur, it) then return true end

  elseif class == "armour" then
    local good_slots = {cloak="Cloak", helmet="Helmet",
                        gloves="Gloves", boots="Boots"}
    st, _ = it.subtype()

    -- Autopickup found aux armour if 1) we don't have any or 2) it's artefact,
    -- or 3) if we don't have artefact or ego armour, and the found armour is
    -- ego.
    if good_slots[st] ~= nil then
      if good_slots[st] == "Gloves" and you.has_claws() > 0 then return end

      -- get currently equipped item in slot
      local cur = items.equipped_at(good_slots[st])

      if should_pickup_equip(cur, it) then return true end

    -- Autopickup found body armour of the same kind we're wearing, according
    -- to conditions (2) and (3) above used for aux slots.
    elseif st == "body" then
      -- get currently equipped item in slot
      local cur = items.equipped_at("armour")

      if should_pickup_equip(cur, it) then return true end
    end
  end

  return
end

-- Run once on setup
add_autopickup_func(pickup_equipment)
start_open_skills()

-- Run every player turn
function ready()
  -- rc_msg("Running ready function...")

  -- Display damage taken in log
  announce_damage()
end

}

: rc_msg("Defining global options...")

##
## General
#######################################
default_manual_training = true
stop = Your transformation is almost over.
show_more = false
autofight_stop = 75
autofight_caught = true

##
## Travel
#######################################
travel_avoid_terrain = deep water
# Set to -1 for instant-travel, set to 1 to see travel paths
travel_delay = -1
explore_delay = 1
# Stop when autopickup items come into view
explore_stop += greedy_items

##
## autoinscribe + autopickup
#######################################
show_god_gift = unident

ai := autoinscribe

ai += (bad|dangerous)_item.*potion:!q
ai += (bad|dangerous)_item.*scroll:!r
ai += potions? of berserk rage:!q
ai += scrolls? of silence:!r

ai += of faith:!P
ai += manual of:!d

# Prevent melee with all staves;
# If we want to melee with one, it's safe to require removing the annotation.
ai += magical staff:!a

# Prevent auto quivering and cycling ammo
ai += (large rock|throwing net|curare|of dispersal):=f

# Convenient shortcuts
ai += curing:@q1
ai += potions? of heal wounds:@q2
ai += potions? of haste:@q3
ai += scrolls? of teleportation:@r4
ai += identify:@r1
ai += remove curse:@r2
ai += chunks of flesh:@e1
ai += ration:@e2

# Automated inscription for sorting armor & weapons
# e.g. `mace` to find any mace
ai += (dagger|quick blade|short sword|rapier):short
ai += (falchion|long sword|scimitar|demon blade|eudemon blade|double sword|great sword|triple sword):long
ai += (hand axe|war axe|broad axe|battleaxe|executioner's axe):axe
ai += (whip|club|mace|flail|morningstar|demon whip|sacred scourge|dire flail|eveningstar|great mace|giant club|giant spiked club):mace
ai += (spear|trident|halberd|scythe|demon trident|trishula|glaive|bardiche):polearm
ai += (staff|quarterstaff|lajatang):staff
ai += (dart|throwing net|stone|boomerang|javelin|large rock):throwing
ai += (hunting sling|fustibalus):sling
ai += (shortbow|longbow):bow
ai += (hand crossbow|arbalest|triple crossbow):crossbow


# Rare items
ai += (executioner's axe|double sword|triple sword|eveningstar|quick blade):rare
ai += (storm dragon hide|storm dragon armour|pearl dragon|gold dragon|crystal plate):rare


# Always automatically pickup
ai += curare:=g
ai += dragon scale:=g

: if you.race() == "Mummy" then
autopickup = /?"+|0}$
: else
autopickup = /%?"!+|0}$
: end
# )       Weapons
# (       Missiles
# [       Armour
# /       Wands
# %       Food
# ?       Scrolls
# " or =  Jewellery
# !       Potions
# + or :  Books
# |       Staves
# 0       Orbs
# }       Misc. items
# $       Gold
# Note that _whether_ items are picked up automatically or not, is
# controlled by the in-game toggle Ctrl-A. Also note that picking
# up takes a turn, but only one turn (regardless of the number of
# items). If you teleport or blink onto a square with interesting
# items, these will not be picked up.

ae := autopickup_exceptions

# Reset all autopickup exceptions
ae =

ae += <javelin
ae += <throwing net
: if you.race() == "Troll" then
ae += <large rock
: end


: if you.race() == "Vampire" or you.race() == "Mummy" or you.race() == "Ghoul" then
ae += <scrolls? of (holy word|tormet)
: else
ae += >scrolls? of (holy word|tormet)
:end

ae += <scrolls? of (vulnerability|immolation)
ae += >scrolls? of (amnesia|noise|random uselessness)

ae += <potions? of (mutation|lignification)
ae += >potions? of (degeneration|stabbing)

ae += <(tins of tremorstones)

# Pickup runes but not 'runed' anything
ae += <rune(s)?[^d]

##
## Display
#######################################
view_delay = 300
hp_colour = 100:lightgreen, 99:lightgray, 75:yellow, 50:lightred, 25:red
mp_colour = 100:cyan, 99:lightgray, 75:yellow, 50:lightred, 25:red
hp_warning = 50

monster_list_colour =
monster_list_colour += friendly:green,neutral:brown
monster_list_colour += good_neutral:brown,strict_neutral:brown
monster_list_colour += trivial:darkgrey,easy:lightgrey
monster_list_colour += tough:yellow,nasty:lightred

##
## Interface
#######################################
# Unequip already equipped items by selecting in equip menus (i.e. w, W, P)
equip_unequip = true
# Cannot target self with risky magic
allow_self_target = no
# mini map size, [X] pixels per tile
tile_map_pixels = 8

##
## Menu & Item Colors
#######################################
## Menu & Item colors should match exactly when possible.
## For menu_colour, the first match ignores subsequent matches.
## For item_glyph, subsequent matches override previous ones.
## Many of the entries below come from dat/defaults/menu_colours.txt,
## which we have to duplicate here since we want only some of the
## entries from that file.

# Enable use of darkgrey
bold_brightens_foreground=true

item := item_glyph
menu := menu_colour
menu =

menu += notes:white:Reached XP level

### General Inventory###

## Reasonable defaults
item += potion:lightgrey
item += scroll:lightgrey
item += wand:lightgrey
item += dangerous_item:blue
item += useless_item:darkgrey

# Items currently not affecting you.
menu += darkgrey:(melded)
# Items disliked by your god.
menu += red:forbidden
# Useless items, comes here to override artefacts etc.
menu += darkgrey:.*useless.*
# Handle cursed and equipped items early to override other colour settings.
menu += lightred:.*equipped.* cursed
menu += red: (a|the) cursed
menu += inventory:lightgreen:.*equipped.*
# Colouring of autoinscribed god gifts
menu += pickup:cyan:god gift
# Highlight (partly) selected items
menu += inventory:white:\w \+\s
menu += inventory:white:\w \#\s

### Food ###
## Color chunks, put ordinary ones on lightgrey.

menu += red:evil_eating.*chunk
item += evil_eating.*chunk:red
menu += blue:mutagenic.*chunk
item += mutagenic.*chunk:blue
menu += lightgrey:chunks?.*flesh
item += chunks?.*flesh:lightgrey
menu += green:( ration)
item += ( ration):green

### Potions ###

menu += lightgrey:potions? of.*(flight|stabbing)
item += potions? of.*(flight|stabbing):lightgrey
menu += brown:potions? of.*berserk
item += potions? of.*berserk:brown
menu += yellow:potions? of.*might
item += potions? of.*might:yellow
menu += cyan:potions? of.*cancellation
item += potions? of.*cancellation:cyan
menu += blue:potions? of.*(lignification|ambrosia)
item += potions? of.*(lignification|ambrosia):blue
menu += lightred:potions? of.*experience
item += potions? of.*experience:lightred
menu += white:potions? of.*(heal wounds|curing)
item += potions? of.*(heal wounds|curing):white
menu += green:potions? of.*resistance
item += potions? of.*resistance:green
menu += lightgreen:potions? of.*(haste|invisibility)
item += potions? of.*(haste|invisibility):lightgreen
menu += lightcyan:potions? of.*mutation
item += potions? of.*mutation:lightcyan
menu += magenta:potions? of.*brilliance
item += potions? of.*brilliance:magenta
menu += lightmagenta:potions? of.*magic
item += potions? of.*magic:lightmagenta

### Scrolls ###

: if you.race() == "Vampire" or you.race() == "Mummy" or you.race() == "Ghoul" then
  menu += darkgrey:scroll.*holy word
  item += scroll.*holy word:darkgrey
  menu += brown:scroll.*torment
  item += scroll.*torment:brown
: else
  menu += brown:scroll.*holy word
  item += scroll.*holy word:brown
  menu += darkgrey:scroll.*torment
  item += scroll.*torment:darkgrey
: end
menu += white:scroll.*acquirement
item += scroll.*acquirement:white
menu += yellow:scroll.*(summoning)
item += scroll.*(summoning):yellow
menu += cyan:scroll.*identify
item += scroll.*identify:cyan
menu += lightcyan:scroll.*magic mapping
item += scroll.*magic mapping:lightcyan
menu += blue:scroll.*(noise|silence|vulnerability|immolation)
item += scroll.*(noise|silence|vulnerability|immolation):blue
menu += lightgrey:scroll.*remove curse
item += scroll.*remove curse:lightgrey
menu += green:scroll.*(fog|teleport)
item += scroll.*(fog|teleport):green
menu += lightgreen:scroll.*(fear|blink)
item += scroll.*(fear|blink):lightgreen
menu += lightmagenta:scroll.*(enchant|brand weapon)
item += scroll.*(enchant|brand weapon):lightmagenta

### Wands ###

# Sometimes can be dangerous or harmful
menu += blue:wand of.*random effects
item += wand of.*random effects:blue

# Single target piercing
menu += brown:wand of.*lightning
item += wand of.*lightning:brown
menu += yellow:wand of.*acid
item += wand of.*acid:yellow

menu += lightgrey:wand of.*flame
item += wand of.*flame:lightgrey
menu += white:wand of.*clouds
item += wand of.*clouds:white

menu += green:wand of.*digging
item += wand of.*digging:green

# Single-turn AOE
menu += cyan:wand of.*iceblast
item += wand of.*iceblast:cyan
menu += lightcyan:wand of.*scattershot
item += wand of.*scattershot:lightcyan

# MR-checking
menu += magenta:wand of.*(disintegration|confusion|polymorph)
item += wand of.*(disintegration|confusion|polymorph):magenta
menu += lightmagenta:wand of.*(paralysis|enslavement)
item += wand of.*(paralysis|enslavement):lightmagenta

### General identification ###

menu += cyan:manual of
item += manual of:cyan
menu += lightcyan:manual
item += manual:lightcyan
menu += lightblue:unidentified .*(potion|scroll|wand|jewellery|book|rod|magical staff)
item += unidentified.*(potion|scroll|wand|jewellery|book|rod|magical staff).*:lightblue

### Gear ###

menu += magenta:.*known .*(ring of (dexterity|strength|intelligence|slaying|evasion|protection(?! from))|amulet of reflection)
item += known.*(ring of (dexterity|strength|intelligence|slaying|evasion|protection(?! from))|amulet of reflection):magenta

menu += inventory:lightgray:.*(book|jewellery|magical staff)
item += (identified|known).*(book|jewellery|magical staff):lightgray

menu += lightmagenta:unidentified.*artefact.*
item += unidentified.*artefact.*(jewellery).*:lightmagenta
menu += white:.*artefact.*
item += identified.*artefact.*(jewellery):white

# Ego items
menu += lightblue:unidentified.*weapon.*(runed|glowing|enchanted)
menu += lightblue:unidentified.*armour.*(runed|glowing|embroidered|shiny|dyed)

# Want this to override anything above
item += (a )?stones?$:lightgray
item += useless:darkgrey
# Only mark these types when forbidden; for other types it looks odd.
item += forbidden.*(potion|scroll|food):red

##
## More (force more prompts)
#######################################

# 1. Dungeon Features
# 2. Failure
# 3. Bad Things
# 4. Translocations
# 5. Expiring Effects
# 6. Religion
# 7. Hell Effects
# 8. Monsters

# Set alias
more := force_more_message
stop := runrest_stop_message
ignore := runrest_ignore_message

####################
# Dungeon Features #
####################

# Abyssal Rune
more += Found .* abyssal rune of Zot

# Entrances, Exits, and Arrivals
more += Found a frozen archway
more += Found a gateway leading out of the Abyss
more += Found a labyrinth entrance
more += Found a staircase to the Ecumenical Temple
more += The mighty Pandemonium lord.*resides here

# Portal Timers
more += distant snort
more += interdimensional caravan
more += invites you to visit
more += oppressive heat
more += roar of battle
more += sound of rushing water
more += The drain falls to bits
more += There is an entrance to a bailey on this level
more += tolling of a bell
more += wave of frost
more += You hear the drain falling apart
more += You hear.*crackle.*magical portal
more += You hear.*crackling.*archway
more += You hear.*creaking.*(oriflamme|portcullis)
more += You hear.*hiss.*sand
more += You hear.*rumble.*avalanche
more += You hear.*rusting.*drain
more += You hear.*ticking.*clock

# Traps
more += (blundered into a|invokes the power of) Zot
more += A huge blade swings out and slices into you
stop += An alarm trap emits a blaring wail
stop += found a zot trap
stop += hear a soft click
more += The power of Zot is invoked against you
more += You (become entangled|are caught) in (a|the) (web|net)
more += You fall through a shaft
more += You stumble into the trap

# Other
more += Another plant grows acid sacs
more += One of the plants suddenly grows acid sacs
more += The walls and floor vibrate strangely for a moment
more += You are suddenly pulled into a different region
more += You have a vision of.*gates?

###########
# Failure #
###########

more += do not work when you're silenced
more += sense of stasis
more += Something interferes with your magic
more += The rod doesn't have enough magic points
more += The spell fizzles
more += The writing blurs in front of your eyes
more += The.*is unaffected
more += This potion can/'t work under stasis
more += This wand has no charges
more += too hungry
more += You are held in a net
more += You are too injured to fight blindly
more += You can't gag anything down
more += You can't unwield
more += You cannot cast spells when silenced
more += You cannot cast spells while unable to breathe
more += You cannot teleport right now
more += You don't have any such object
more += You don't have enough magic
more += You don't.* that spell
more += You fail to use your ability
more += You have no appropriate body parts free
more += You have no means to grasp a wand firmly enough
more += You haven't enough magic at the moment
more += You miscast
more += Your amulet of stasis
more += Your attempt to break free
more += Your body armour is too heavy

#############################
# Bad and Unexpected Things #
#############################

# announce_damage
more += $PAUSE_MORE

# Bad things happening to you
more += corrodes your equipment
more += Your corrosive artefact corrodes you
more += are blown away by the wind
more += dispelling energy hits you
more += infuriates you
more += lose consciousness
more += mark forms upon you
more += Ouch! That really hurt!
more += silver sears you
more += Space bends around you
more += Space warps horribly around you
more += surroundings become eerily quiet
more += Terrible wounds (open|spread) all over you
more += The acid corrodes your
more += The air around.*erupts in flames
more += The air twists around and violently strikes you in flight
more += You shudder from the earth-shattering force
more += The arrow of dispersal hits you[^r]
more += The barbed spikes become lodged in your body
more += The barbed spikes dig painfully into your body as you move
more += The blast of calcifying dust hits you[^r]
more += The poison in your body grows stronger
more += The pull of.*song draws you forwards
more += The.*engulfs you in water
more += The.*grabs you[^r]
more += You (are|feel) drained
more += You are (blasted|electrocuted)
more += You are blown backwards
more += You are burned terribly
more += You are encased in ice
more += You are engulfed in calcifying dust
more += You are engulfed in dark miasma
more += You are engulfed in mutagenic fog
more += You are knocked back
more += You are mesmerised
more += You are slowing down
more += You are trampled
more += You convulse
more += You feel a (horrible|terrible) chill
more += You feel haunted
more += You feel less vulnerable to poison
more += You feel your attacks grow feeble
more += You feel your flesh.*rot
more += You feel your power drain away
more += You feel your power leaking away
more += You feel yourself grow more vulnerable to poison
more += You stumble backwards
more += You.*re (confused|more confused|too confused)
more += You.*re (poisoned|more poisoned|lethally poisoned)
more += Your body is wracked with pain
more += Your damage is reflected back at you
more += Your limbs are stiffening
more += Your magical defenses are stripped away
more += Your?.*suddenly stops? moving

# Monsters doing bad things
more += A tree reaches out and hits you!
more += Agitated ravens fly out from beneath the
more += begins to recite a word of recall
more += Being near the torpor snail leaves you feeling lethargic
more += blows on a signal horn
more += cast banishment
more += cast paralyse
more += cast Torment
more += goes berserk
more += The moth of wrath goads something on
more += is duplicated
more += is no longer invulnerable
more += Its appearance distorts for a moment
more += Mara seems to draw the.*out of itself
more += Mara shimmers
more += Miasma billows from the
more += shoots a curare
more += stands defiantly in death's doorway
more += steals.*your
more += swoops through the air toward you
more += The forest starts to sway and rumble
more += The jumping spider pounces on you [^but]
more += The octopode crusher throws you
more += The shadow imp is revulsed by your support of nature
more += The water nymph flows with the water
more += The.*offers itself to Yredelemnul
more += The.*seems to speed up
more += The.*shudders
more += There is a horrible\, sudden wrenching feeling in your soul
more += Vines fly forth from the trees!
more += You are hit by a branch
more += You feel you are being watched by something
more += Your magical defenses are stripped away
more += \'s.*reflects

# Unexpected situations
more += A magical barricade bars your way
more += Done waiting
more += doors? slams? shut
more += It doesn't seem very happy
more += Mutagenic energies flood into your body
more += Some monsters swap places
more += (starving|devoid of blood)
more += (The|Your).*falls away!
more += The divine light dispels your darkness!
more += The walls disappear
more += There is a sealed passage
more += You are wearing\:
more += You cannot afford.*fee
more += You feel (dopey|clumsy|weak)
more += You feel a genetic drift
more += You feel monstrous
more += You feel your rage building
more += You have disarmed
more += You have finished your manual
more += You need to eat something NOW
more += You smell decay. (^Yuck!)
more += You stop (a|de)scending the stairs
more += You turn into a fleshy mushroom
more += Your body shudders with the violent release of wild energies
more += Your guardian golem overheats
more += your magic stops regenerating
more += Your scales start
more += your.*devoured
more += Green shoots are pushing up through the earth

# Things getting better
stop += contamination has completely
more += You can move again
more += You slip out of the net
more += You.*and break free
more += Your fit of retching subsides
more += seems mollified

# Ghouls
: if you.race() == "Ghoul" then
	stop += smell.*(rott(ing|en)|decay)
	stop += something tasty in your inventory
: end

##################
# Translocations #
##################

# Teleporting
more += You blink
more += You.*teleport [^f]
more += You feel strangely (unstable|stable)
more += You feel your translocation being delayed
more += Your surroundings flicker
more += Your surroundings seem slightly different
more += Your surroundings suddenly seem different
# -Tele
more += You cannot blink right now
more += You cannot teleport right now
more += You feel.*firmly anchored in space
more += You are no longer firmly anchored in space
# -cTele
more += You feel your control is inadequate

####################
# Expiring Effects #
####################

# God Abilities
# Divine Shield (The Shining One)
more += Your divine shield starts to fade.
more += Your divine shield fades away.
# Jelly Prayer (Jiyva)
more += Your prayer is over.
# Mirror Damage (Yredelemnul)
more += dark mirror aura disappears

# Player Spells
# Aura of Abjuration
stop += Your aura of abjuration expires
# Control Teleport
stop += you feel uncertain
# Death's Door
more += time is quickly running out
more += life is in your own
# Enslavement
more += is no longer charmed
# Flight
more += You are starting to lose your buoyancy
stop += You lose control over your flight
# Haste
more += Your extra speed is starting to run out
more += You feel yourself slow down
# Invisibility
more += You feel more conspicuous
more += You flicker for a moment
more += You flicker back
# Ozocubu's Armour and Condensation Shield
more += Your icy (shield|armour) evaporates
more += Your.*(shield|armour) melts away
# Phase Shift
more += You feel closer to the material plane
more += You are firmly grounded in the material plane once more
# Repel/Deflect
stop += missiles spell is about to expire
more += You feel less protected from missiles
# Shroud of Golubria
stop += shroud begins to fray
stop += shroud unravels
more += Your shroud falls apart
# Silence
more += Your hearing returns
# Swiftness
stop += start to feel a little slower
more += You feel sluggish
# Transmutations
more += Your transformation is almost over
more += You have a feeling this form
more += Your skin feels tender
more += You feel yourself come back to life

# Other
# Potion of Resistance
more += You start to feel less resistant.
more += Your resistance to elements expires

############
# Religion #
############

# Gifts or abilities are ready
# Dithmenos
more += You are shrouded in an aura of darkness
more += You now sometimes bleed smoke
more += You.*no longer.*bleed smoke
more += Your shadow no longer tangibly mimics your actions
more += Your shadow now sometimes tangibly mimics your actions
# Gozag
more += will now duplicate a non-artefact item
# Jiyva
more += will now unseal the treasures of the Slime Pits
# Kikubaaqudgha
more += Kikubaaqudgha will now enhance your necromancy
# Lugonu
more += Lugonu will now corrupt your weapon
# Qazlal
more += resistances upon receiving elemental damage
more += You are surrounded by a storm which can block enemy attacks
# Ru
more += you are ready to make a new sacrifice
# Sif Muna
more += Sif Muna is protecting you from the effects of miscast magic
# The Shining One
more += The Shining One will now bless
# Zin
more += will now cure all your mutations

# You Screwed Up
more += is no longer ready

# Poor Decisions
more += You really shouldn't be using

# Gaining new abilities
: if you.god() ~= "Uskayaw" then
more += You can now
more += Your?.*can no longer
: end

# Wrath
more += Nemelex gives you another card to finish dealing
more += Fedhas invokes the elements against you
more += Lugonu sends minions to punish you
more += Okawaru sends forces against you
more += wrath finds you

# Xom Effects
more += staircase.*moves
more += is too large for the net to hold

# Other
more += Jiyva alters your body
: if you.god() == "Xom" then
more += god:
: end

: if not string.find(you.god(), "Jiyva") then
more += splits in two
:end

################
# Hell Effects #
################

more += A gut-wrenching scream fills the air
more += Brimstone rains from above
more += Die\, mortal
more += Leave now\, before it is too late
more += Something frightening happens
more += Trespassers are not welcome here
more += We do not forgive those who trespass against us
more += We have you now
more += You do not belong in this place
more += You feel a terrible foreboding
more += You feel lost and a long\, long way from home
more += You hear diabolical laughter
more += You hear words spoken in a strange and terrible language
more += You sense a hostile presence
more += You sense an ancient evil watching you
more += You shiver with fear
more += You smell brimstone
more += You suddenly feel all small and vulnerable
more += You will not leave this place
more += You have reached level
more += You rejoin the land of the living

############
# Monsters #
############

# Arriving Unexpectedly
more += appears in a shower of sparks
more += appears out of thin air
more += comes (up|down) the stairs
more += Something appears in a flash of light
more += The.*is a mimic
more += You sense the presence of something unfriendly
more += The.*answers the.*call
more += Wisps of shadow swirl around
more += Shadows whirl around

# Item Use
more += drinks a potion
more += evokes.*(amulet|ring)
more += reads a scroll
more += zaps a (wand|rod)

# Dangerous monsters we force_more when first seen.
# Things with ranged (or extremely fast), irresistable effects.
more += ((floating|shining) eye|dream sheep|death drake).*into view
more += (wretched star|apocalypse crab|death drake).*into view
more += (entropy weaver|torpor snail|spriggan druid).*into view
more += (vault (warden|sentinel)|merfolk (avatar|siren)).*into view
more += (guardian serpent|draconian shifter|convoker|death cob).*into view
more += (phantasmal warrior|air elemental).*into view
# Paralysis/Petrify/Banish
more += (orc sorcerer|(?<!orc )wizard|ogre mage|great orb of eyes|sphinx).*into view
more += (vampire knight|basilisk|deep elf (sorcerer|demonologist)).*into view
# Torment/flay or hellfire
more += (flayed ghost|greater mummy|mummy priest|fiend|tzitzimitl).*into view
more += (tormentor|curse toe|curse skull|hell sentinel|hellion).*into view
more += (deep elf (sorcerer|high priest)|draconian scorcher).*into view
# Things that can hit for over 90+ damage in a turn that is either ranged or very fast.
more += ((deep elf|draconian) annihilator|tengu reaver).*into view
more += (lich|orb of fire|executioner|juggernaut|shrike).*into view

# Any uniques and any pan lords
more += (?-i:[A-Z]).* comes? into view

##
## Morgue
#######################################
dump_item_origins = all
dump_message_count = 100
dump_order  = header,hiscore,stats,misc,mutations,skills,spells,inventory
dump_order += overview,screenshot,monlist,messages,skill_gains,action_counts
dump_order += vaults,notes,kills,xp_by_level,skill_gains,action_counts,screenshots,kills_by_place,turns_by_place

note_hp_percent = 10
note_all_skill_levels = true
note_chat_messages = false
user_note_prefix = >>

note_items += experience,of resistance, Archmagi
note_items += crystal plate armour,pearl dragon scales,gold dragon scales
note_items += artefact
note_messages += You feel monstrous
note_messages += You pass through the gate
note_messages += cast .* Abyss

# Noteable monsters
# Undead
note_monsters += ancient lich,curse skull,curse toe,greater mummy
# Depths
note_monsters += caustic shrike
# Special hall_of_zot spawns
note_monsters += killer klown,electric golem,orb of fire

: rc_msg("Finished defining global options.")

##
## DEBUG
#######################################
: rc_msg("DEBUG")
: colortest()

##
## END
################################################################################################
: rc_scs("Successfully initialized magusnn.rc!")
